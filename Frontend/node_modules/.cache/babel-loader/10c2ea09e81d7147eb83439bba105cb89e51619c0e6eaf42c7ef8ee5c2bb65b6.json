{"ast":null,"code":"var _jsxFileName = \"/workspaces/Full-Stack/Frontend/src/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if there is a token in local storage on initialization\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n  const handleLoginSuccess = () => {\n    setLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Clear the token from local storage on logout\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      handleLoginSuccess,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8ySMdZGY74HFzvXtK44+NjqgpXQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","loggedIn","setLoggedIn","token","localStorage","getItem","handleLoginSuccess","handleLogout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/Full-Stack/Frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if there is a token in local storage on initialization\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  const handleLoginSuccess = () => {\n    setLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Clear the token from local storage on logout\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ loggedIn, handleLoginSuccess, handleLogout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/BJ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCN,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,QAAQ;MAAEK,kBAAkB;MAAEC;IAAa,CAAE;IAAAR,QAAA,EACzEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CA1BWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}